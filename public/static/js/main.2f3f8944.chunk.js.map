{"version":3,"sources":["Types/types.js","Reducers/authReducer.js","Reducers/calendarReducer.js","Reducers/uiReducers.js","Reducers/rootReducer.js","Store/store.js","Helpers/fetch.js","Helpers/prepareEvents.js","Actions/eventsActions.js","Actions/authActions.js","hooks/useForm.js","Components/Auth/LoginScreen.jsx","Components/UI/Navbar.jsx","Helpers/calendar-messages-es.js","Components/Calendar/CalendarEvent.jsx","Actions/uiActions.js","Components/Calendar/CalendarModal.jsx","Components/UI/AddNewFab.jsx","Components/UI/DeleteEventFab.jsx","Components/Calendar/CalendarScreen.jsx","Router/PrivateRoute.jsx","Router/PublicRoute.jsx","Router/AppRouter.jsx","CalendarApp.jsx","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseURL","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActive","eventDelete","eventLoaded","eventUpdate","startLogout","dispatch","clear","logout","ckeckingFinish","login","user","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","formLoginValues","handleLoginInputChange","formRegisterValues","handleRegisterInputChange","lEmail","lPassword","rName","rEmail","rPassword","rPassword2","className","onSubmit","e","email","password","preventDefault","a","res","json","ok","setItem","token","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","toUpperCase","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","datePlusOneHour","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","overlayClassName","closeTimeoutMS","isOpen","onAfterOpen","onRequestClose","style","contentLabel","momentStart","momentEnd","isSameOrAfter","trim","length","evento","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","eventSetActive","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f3f8944.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[UI] Open Modal',\n    uiCloseModal: '[UI] Close Modal',\n    \n    eventLoaded:    '[Events] Loaded',\n    eventLogout:    '[Events] Logout',\n    eventUpdate:    '[Events] Updated',\n    eventDelete:    '[Events] Deleted',\n    eventAddNew:    '[Events] Add New',\n    eventSetActive: '[Events] Set Active',\n    eventStartAddNew: '[Event] Start Add New',\n    eventClearActive: '[Events] Clear Active',\n\n    authLogin: '[Auth] Login',\n    authLogout: '[Auth] Logout',\n    authChecking: '[Auth] Checking',\n    authStartLogin: '[Auth] Start Login',\n    authStartRegister: '[Auth] Start Register',\n    authCheckingFinish: '[Auth] Checking Finished',\n    authStartTokenRenew: '[Auth] Start Token Renew',\n\n}","import { types } from \"../Types/types\";\n\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null,\n}\n\n\n\n\nexport const authReducer = (state = initialState, action) => {\n    \n    switch (action.type) {\n\n        case types.authLogin: {\n            return {\n                ...state,\n                ...action.payload,\n                checking: false,\n            }\n        }\n        \n        case types.authCheckingFinish: {\n            return {\n                ...state,\n                checking: false,\n            }\n        }\n\n        case types.authLogout: {\n            return {\n                checking: false,\n            }\n        }\n        \n        default: \n            return state;\n    }\n}","import { types } from \"../Types/types\";\n\n/*\n{\n        id: new Date().getTime(),\n        title: 'All Day Event',\n        start: moment().toDate(),\n        end: moment().add(2, 'hours').toDate(),\n        bgcolor: '#fafafa',\n        notes : 'kajshdfkjashdf',\n        user: {\n                _id: '123',\n                name: 'Juan',\n        },\n    }\n*/\n\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\n\nexport const CalendarReducer = ( state = initialState, action ) => {\n    \n        switch ( action.type ) {\n    \n            case types.eventSetActive:\n                return {\n                    ...state,\n                    activeEvent: action.payload,\n                };\n    \n            case types.eventAddNew:\n                return {\n                    ...state,\n                    events: [\n                        ...state.events,\n                        action.payload,\n                    ],\n                };\n\n            case types.eventClearActive:\n                return {\n                    ...state,\n                    activeEvent: null,\n                };\n\n            case types.eventUpdate:\n                return {\n                    ...state,\n                    events: state.events.map( event =>\n                        event.id === action.payload.id ? ( action.payload ) : event\n                    ),\n                };\n\n            case types.eventDelete:\n                return {\n                    ...state,\n                    events: state.events.filter( event => (event.id !== state.activeEvent.id) ),\n                    activeEvent: null, \n                };\n\n            case types.eventLoaded:\n                return {\n                    ...state,\n                    events: [ ...action.payload ]\n                }\n                \n            case types.eventLogout:\n                return {\n                    ...initialState\n                }\n\n            default:\n                return state;\n        }\n}\n","import { types } from \"../Types/types\";\n\nconst initialState = {\n    modalOpen: false,\n    \n}\n\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { CalendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducers\";\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: CalendarReducer,\n    auth: authReducer\n});\n\n\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../Reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n\n\n\n","\nconst baseURL = process.env.REACT_APP_API_URL;\n\n\nexport const fetchWithoutToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseURL }/${ endpoint }`;\n\n    if (method === 'GET') {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        } );\n    }\n}\n\n\n\n\nexport const fetchWithToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseURL }/${ endpoint }`;\n\n    if (method === 'GET') {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-Type': 'application/json',\n                'x-token': localStorage.getItem('token') || '',\n            }\n        } );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-Type': 'application/json',\n                'x-token': localStorage.getItem('token') || '',\n            },\n            body: JSON.stringify( data )\n        } );\n    }\n}","import moment from \"moment\";\n\n\n\n\n\nexport const prepareEvents = (events = [] ) => {\n\n    return events.map( event => ({\n            ...event,\n            end: moment(event.end).toDate(),\n            start: moment(event.start).toDate(),\n        })\n    );\n}","import Swal from \"sweetalert2\";\nimport { fetchWithToken } from \"../Helpers/fetch\";\nimport { prepareEvents } from \"../Helpers/prepareEvents\";\nimport { types } from \"../Types/types\";\n\n\n\n\nexport const eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event,\n});\n\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event,\n});\n\n\nexport const eventClearActive = () => ({\n  type: types.eventClearActive,\n});\n\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth;\n\n    try {\n      const res = await fetchWithToken(\"events\", event, \"POST\");\n      const body = await res.json();\n\n      if (body.ok) {\n        event.id = body.evento.id;\n        event.user = {\n          _id: uid,\n          name: name,\n        };\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n\n    try {\n      const res = await fetchWithToken(`events/${event.id}`, event , \"PUT\");\n      const body = await res.json();\n\n      if (body.ok) {\n        dispatch(eventUpdate(body.evento));\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const res = await fetchWithToken(\"events\");\n      const body = await res.json();\n      \n      const events = prepareEvents(body.eventos);\n      dispatch(eventLoaded( events ));\n      \n    } catch (error) {}\n  };\n};\n\n\nexport const eventStartDelete = () => {\n  return async (dispatch, getState ) => {\n\n    const { id } = getState().calendar.activeEvent;\n\n    try {\n      const res = await fetchWithToken(`events/${id}`, {}, \"DELETE\");\n      const body = await res.json();\n\n      if (body.ok) {\n        dispatch(eventDelete());\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n\n\nexport const eventLogout = () => ({\n  type: types.eventLogout,\n});\n\n\nconst eventDelete = () => ({\n  type: types.eventDelete,\n});\n\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events,\n});\n\n\nconst eventUpdate = (event) => ({\n  type: types.eventUpdate,\n  payload: event,\n});","import Swal from \"sweetalert2\";\nimport { fetchWithoutToken, fetchWithToken } from \"../Helpers/fetch\";\nimport { types } from \"../Types/types\";\nimport { eventLogout } from \"./eventsActions\";\n\n\n\n\nexport const authStartLogin = ( email, password ) => {\n    return async( dispatch ) => {\n\n        const res = await fetchWithoutToken( 'auth', { email, password }, 'POST' );\n\n        const body = await res.json();\n\n        if (body.ok) {\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name,\n            }) );\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\nexport const startRegister = ( name, email, password ) => {\n    return async( dispatch ) => {\n\n        const res = await fetchWithoutToken( 'auth/new', { name, email, password }, 'POST' );\n\n        const body = await res.json();\n\n        if (body.ok) {\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name,\n            }) );\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    }\n}\n\n\n\nexport const startChecking = () => {\n    return async( dispatch ) => {\n        const res = await fetchWithToken( 'auth/renew' );\n\n        const body = await res.json();\n\n        if (body.ok) {\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name,\n            }) );\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( ckeckingFinish() );\n        }\n    }\n}\n\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n        localStorage.clear();\n        dispatch( eventLogout() );\n        dispatch( logout() );\n    }\n}\n\n\nconst ckeckingFinish = () => ({\n    type: types.authCheckingFinish,\n});\n\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n})\n\nconst logout = () => ({\n    type: types.authLogout,\n});\n\n\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { authStartLogin, startRegister } from '../../Actions/authActions';\nimport { useForm } from '../../hooks/useForm';\nimport './Login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        // lEmail: 'matyaspr@gmail.com',\n        // lPassword: '123456'\n    });\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        // rName: 'matyas',\n        // rEmail: 'matyaspr@gmail.com',\n        // rPassword: '123456',\n        // rPassword2: '123456'\n    });\n\n    const { lEmail, lPassword } = formLoginValues;\n    const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\n\n\n    const handleLoginSubmit = (e) => {\n        e.preventDefault();\n        dispatch( authStartLogin(lEmail, lPassword) );\n    }\n\n    const handleRegisterSubmit = (e) => {\n        e.preventDefault();\n        if (rPassword !== rPassword2) {\n            return Swal.fire('Error', 'Las contraseña deben ser iguales', 'error');\n        }\n        \n        dispatch( startRegister( rName, rEmail, rPassword ) );\n        \n    }\n\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLoginSubmit }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                                \n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegisterSubmit }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value= { rName}\n                                onChange= { handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value= { rEmail}\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword\"\n                                value= { rPassword}\n                                onChange= { handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value= { rPassword2}\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../Actions/authActions';\n\nexport const Navbar = () => {\n\n  const { name } = useSelector( state => state.auth );\n  const dispatch = useDispatch();\n\n\n  const handleLogout = () => {\n    dispatch( startLogout() );\n  }\n\n  return (\n    <div className='navbar navbar-dark bg-dark mb-4'>\n        <span className=\"navbar-brand\">\n            { name.toUpperCase() }\n        </span>\n\n\n        <button \n          className=\"btn btn-danger\"\n          onClick={ handleLogout }>\n            <i className=\"fas fa-sign-out\"></i> \n            <span> Salir </span>\n        </button>\n    </div>\n  )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n  \n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <strong> { user.name } </strong>\n        </div>\n    )\n}\n","import { types } from \"../Types/types\";\n\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n});\n\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n});","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport Swal from 'sweetalert2';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\n\nimport { uiCloseModal } from '../../Actions/uiActions';\nimport { eventAddNew, eventClearActive, eventStartAddNew, eventStartUpdate, eventUpdate } from '../../Actions/eventsActions';\n\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\n\nconst now = moment().minutes(0).seconds(0).add( 1, 'hours' );\nconst datePlusOneHour = now.clone().add( 1, 'hours' );\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: datePlusOneHour.toDate(),\n};\n\n\n\n\n\n\nexport const CalendarModal = () => {\n  \n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ]   = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ]       = useState( datePlusOneHour.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [ formValues, setFormValues ] = useState( initEvent );\n    const { notes, title, start, end } = formValues;\n\n    useEffect( () => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [ activeEvent, setFormValues ]) ;\n    \n    \n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value,\n        });\n    } \n\n    // function openModal() {\n        \n    // }\n\n    function afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        \n    }\n\n    function closeModal() {\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActive() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e,\n        });\n    }\n\n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e,\n        });\n    }\n\n    const handleSubmitForm = ( e ) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n        // console.log(momentStart);\n        // console.log(momentEnd);\n        if (momentStart.isSameOrAfter( momentEnd )) {\n            Swal.fire('Error', 'La fecha de inicio no puede ser mayor a la fecha de fin');\n            return;\n        }\n        \n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate( formValues ) );\n        }else {\n            dispatch( eventStartAddNew( formValues ));\n        }\n\n        setTitleValid(true);\n        closeModal();\n    }\n    \n\n    return (\n        <Modal\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n            closeTimeoutMS={ 200 }\n            isOpen={modalOpen}\n            onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel=\"Example Modal\"\n        >\n\n        <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' }  </h1>\n        <hr />\n\n        <form \n            className=\"container\"\n            onSubmit={ handleSubmitForm }>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker \n                        className=\"form-control\"\n                        value={ dateStart }\n                        onChange={ handleStartDateChange }\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker \n                        className=\"form-control\"\n                        value={ dateEnd }\n                        onChange={ handleEndDateChange }\n                        minDate={ dateStart }\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className= { `form-control ${ !titleValid && 'is-invalid' }` }\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n        </form>\n        \n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../Actions/uiActions';\n\n\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch( uiOpenModal() )\n    }\n\n\n    return (\n        <button \n            className=\"btn btn-primary fab\"\n            onClick={ handleClick }>\n                <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../Actions/eventsActions';\n\n\n\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n    const handleClickDelete = () => { dispatch( eventStartDelete() ) }\n\n\n\n    \n  return (\n    <button\n        className=\"btn btn-danger btn-fab fab-danger\"\n        onClick={ handleClickDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n    </button>\n  )\n}\n","import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\n\nimport { Navbar } from \"../UI/Navbar\";\nimport { messages } from \"../../Helpers/calendar-messages-es\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { CalendarModal } from \"./CalendarModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiOpenModal } from \"../../Actions/uiActions\";\nimport { AddNewFab } from \"../UI/AddNewFab\";\nimport { eventClearActive, eventSetActive, eventStartLoading } from \"../../Actions/eventsActions\";\nimport { DeleteEventFab } from \"../UI/DeleteEventFab\";\n\nmoment.locale(\"es\");\nconst localizer = momentLocalizer(moment);\n\n\n\n\n\nexport const CalendarScreen = () => {\n  \n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector((state) => state.calendar);\n    const [lastView, setLastView] = useState( localStorage.getItem(\"lastView\") || \"month\" );\n    const { uid } = useSelector( state => state.auth );\n\n    useEffect(() => {\n      dispatch( eventStartLoading() )\n    }, [dispatch]);\n    \n\n    const onDoubleClick = (event) => {\n      console.log(event);\n      dispatch(uiOpenModal());\n    };\n\n    const onSelectEvent = (event) => {\n      dispatch(eventSetActive(event));\n      // dispatch( uiOpenModal() );\n    };\n\n    const onViewChange = (event) => {\n      setLastView(event);\n      localStorage.setItem(\"lastView\", event);\n    };\n\n\n    const onSelectSlot = (event) => {\n      console.log(event);\n      dispatch( eventClearActive() );\n    }\n\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n\n\n      const style = {\n        backgroundColor: ( uid === event.user._id ) ? \"#367CF7\" : \"#465660\",\n        borderRadius: \"0px\",\n        opacity: 0.8,\n        display: \"block\",\n        color: \"white\",\n      };\n\n      return {\n        style,\n      };\n    };\n\n    return (\n      <div className=\"calendar-screen\">\n        <Navbar />\n\n        <Calendar\n          localizer={localizer}\n          events={events}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          messages={messages}\n          eventPropGetter={eventStyleGetter}\n          onDoubleClickEvent={onDoubleClick}\n          onSelectEvent={onSelectEvent}\n          onView={onViewChange}\n          onSelectSlot={onSelectSlot}\n          selectable={true}\n          view={lastView}\n          components={{\n            event: CalendarEvent,\n          }}\n        />\n\n        <CalendarModal />\n\n        {activeEvent && <DeleteEventFab />}\n        <AddNewFab />\n      </div>\n    );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\nimport { startChecking } from '../Actions/authActions';\n\nimport { LoginScreen } from '../Components/Auth/LoginScreen';\nimport { CalendarScreen } from '../Components/Calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\n\nexport const AppRouter = () => {\n\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector(state => state.auth);\n  \n  useEffect(() => {\n\n    dispatch( startChecking() );\n  \n  }, [ dispatch ])\n  \n\n  if ( checking ) {\n    return (<h5>Cargando...</h5>)\n  }\n\n\n  return (\n    <Router >\n        <div>\n            <Switch>\n                <PublicRoute \n                  exact \n                  path=\"/login\"  \n                  component={ LoginScreen } \n                  isAuthenticated={ !!uid }\n                /> \n\n                <PrivateRoute \n                  exact \n                  path=\"/\" \n                  component={ CalendarScreen } \n                  isAuthenticated={ !!uid }\n                /> \n            </Switch>\n        </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\n\nimport { store } from './Store/store'\nimport { AppRouter } from './Router/AppRouter'\n\n\n\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './style.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}